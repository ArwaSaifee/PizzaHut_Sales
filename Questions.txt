Basic:
Ques1. Retrieve the total number of orders placed.
Ans. SELECT 
    COUNT(order_id) AS total_orders
FROM
    orders

Ques2. Calculate the total revenue generated from pizza sales.
Ans. SELECT 
    ROUND(SUM(quantity * price), 2)
FROM
    order_details
        LEFT JOIN
    pizzas ON order_details.pizza_id = pizzas.pizza_id

Ques3. Identify the highest-priced pizza.
Ans. SELECT 
    pizza_types.name, pizzas.price
FROM
    pizzas
        JOIN
    pizza_types ON pizzas.pizza_type_id = pizza_types.pizza_type_id
ORDER BY pizzas.price DESC
LIMIT 1

Ques4. Identify the most common pizza size ordered.
Ans. SELECT 
    pizzas.size,
    COUNT(order_details.order_details_id) AS order_count
FROM
    order_details
        JOIN
    pizzas ON order_details.pizza_id = pizzas.pizza_id
GROUP BY pizzas.size
ORDER BY order_count DESC

Ques5. List the top 5 most ordered pizza types along with their quantities.
Ans. SELECT 
    pizza_types.name, SUM(order_details.quantity) AS quantity
FROM
    pizza_types
        JOIN
    pizzas ON pizza_types.pizza_type_id = pizzas.pizza_type_id
        JOIN
    order_details ON pizzas.pizza_id = order_details.pizza_id
GROUP BY pizza_types.name
ORDER BY quantity DESC
LIMIT 5;


Intermediate:
Ques6. Join the necessary tables to find the total quantity of each pizza category ordered.
Ans. select 
	pizza_types.category,
    sum(order_details.quantity) as quantity
from 
	order_details
join
	pizzas
on order_details.pizza_id = pizzas.pizza_id
join 
	pizza_types
on pizza_types.pizza_type_id = pizzas.pizza_type_id
group by 
	pizza_types.category
order by 
	quantity desc

Ques7. Determine the distribution of orders by hour of the day.
Ans. select
	extract(hour from order_time) as time_of_day,
	count(order_id)
from 
	orders
group by 
	time_of_day

Ques8. Join relevant tables to find the category-wise distribution of pizzas.
Ans. select
	category,
    count(name)
from 
	pizza_types
group by 
	category
Ques9. Group the orders by date and calculate the average number of pizzas ordered per day.
Ans. select round(avg(quantity),0) as pizza_ordered_per_day
from (select 
	order_date,
    sum(quantity) as quantity 
from 
	order_details
join 
	orders
on order_details.order_id = orders.order_id
group by 
	order_date) as subquery

Ques10. Determine the top 3 most ordered pizza types based on revenue.
Ans: select 
	pizza_types.name,
    sum(order_details.quantity * pizzas.price) as revenue
from 
	pizza_types
inner join 
	pizzas
on pizza_types.pizza_type_id = pizzas.pizza_type_id
join 
	order_details
on pizzas.pizza_id = order_details.pizza_id
group by 
	pizza_types.name
order by 
	revenue desc 
limit 3

Advanced:
Ques11. Calculate the percentage contribution of each pizza type to total revenue.
Ans. SELECT 
    pizza_types.category,
    ROUND(SUM(order_details.quantity * pizzas.price) / (SELECT 
                    ROUND(SUM(order_details.quantity * pizzas.price),
                                2) AS total_sales
                FROM
                    order_details
                        JOIN
                    pizzas ON order_details.pizza_id = pizzas.pizza_id) * 100,
            2) AS revenue
FROM
    pizza_types
        JOIN
    pizzas ON pizza_types.pizza_type_id = pizzas.pizza_type_id
        JOIN
    order_details ON pizzas.pizza_id = order_details.pizza_id
GROUP BY pizza_types.category

Ques12. Analyze the cumulative revenue generated over time.
Ans: select 
	order_date,
	round(sum(revenue) over(order by order_date),2) as revenue
from
(select 
	orders.order_date,
    sum(order_details.quantity * pizzas.price) as revenue
from 
	order_details
join 
	orders
on orders.order_id = order_details.order_id
join 
	pizzas
on pizzas.pizza_id = order_details.pizza_id
group by 
	orders.order_date) as subquery

Ques 13. Determine the top 3 most ordered pizza types based on revenue for each pizza category.
Ans: select 
	category,
    name,
    revenue,
    rn
from
(select 
	category,
    name,
    rank() over(partition by category order by revenue desc) as rn,
    revenue
from
(select 
	pizza_types.category,
    pizza_types.name,
    sum(order_details.quantity * pizzas.price) as revenue
from 
	order_details
join 
	pizzas
on order_details.pizza_id = pizzas.pizza_id
join 
	pizza_types
on pizzas.pizza_type_id = pizza_types.pizza_type_id
group by 
	pizza_types.category,
    pizza_types.name
) as subquery) as a
where 
	rn <= 3
